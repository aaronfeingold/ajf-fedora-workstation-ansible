---
- name: Install ML training system dependencies
  dnf:
    name:
      - python3-devel
      - python3-numpy
      - python3-scipy
      - python3-pandas
      - python3-matplotlib
      - python3-jupyter-notebook
      - gcc-c++
    state: present
  become: yes

- name: Get current user's home directory
  set_fact:
    user_home: "{{ ansible_env.HOME }}"

- name: Install ML Python packages
  pip:
    name:
      - torch
      - tensorflow==2.15.0 # Specifying version for compatibility
      - scikit-learn
      - transformers
      - datasets
      - pytorch-lightning
      - wandb
      - ray[tune] # For hyperparameter tuning
    executable: "{{ user_home }}/.pyenv/shims/pip"
    state: present

- name: Create ML projects directory structure
  file:
    path: "{{ user_home }}/ml-projects/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "data"
    - "models"
    - "logs"
    - "checkpoints"

- name: Set up training environment optimizations
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    block: |
      # ML Training Environment Settings
      export TF_FORCE_GPU_ALLOW_GROWTH=true
      export PYTHONUNBUFFERED=1
      export TOKENIZERS_PARALLELISM=true
    marker: "# {mark} ANSIBLE MANAGED BLOCK - ML TRAINING SETTINGS"
    create: yes

- name: Install NVIDIA dependencies
  dnf:
    name:
      - kernel-devel
      - kernel-headers
      - gcc
      - make
      - dkms
    state: present
  become: yes

- name: Install CUDA toolkit and drivers
  shell: |
    dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/fedora41/x86_64/cuda-fedora41.repo
    dnf clean all
    dnf -y module install nvidia-driver:latest-dkms
    dnf -y install cuda-toolkit-12-3
  become: yes

- name: Configure CUDA paths
  blockinfile:
    path: "{{ user_home }}/.bashrc"
    block: |
      # CUDA Paths
      export PATH=/usr/local/cuda/bin:$PATH
      export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    marker: "# {mark} ANSIBLE MANAGED BLOCK - CUDA SETTINGS"
    create: yes
