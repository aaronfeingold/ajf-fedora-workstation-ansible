---
  - name: Check if Node.js is installed
    command: node --version
    register: node_version
    ignore_errors: true

  - name: Print node standard out
    debug:
      msg: "found installed node_version {{ node_version.stdout }}"
    when: node_version.rc == 0

  - name: Install Node.js and npm if not installed via dns
    dnf:
      name: nodejs
      state: present
    when: node_version.rc != 0
    become: yes

  - name: Check if nvm is installed
    command: command -v nvm
    register: nvm_check
    ignore_errors: true
  - when: nvm_check.rc == 0
    block:
      - name: Install NVM using GitHub install script
        shell: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
        become: false
        when: nvm_check.rc == 0

      - name: Ensure NVM is installed and default Node.js version is set
        shell: |
          if [ -s "{{ ansible_env.HOME }}/.nvm/nvm.sh" ]; then
            . "{{ ansible_env.HOME }}/.nvm/nvm.sh"
            nvm install node
            nvm alias default node
          else
            echo "NVM is not installed properly"
            exit 1
          fi
        args:
          executable: /bin/bash

  - name: Check if cdnvm function already exists in .bashrc
    command: grep -c "cdnvm()" "{{ ansible_env.HOME }}/.bashrc"
    register: cdnvm_exists
    changed_when: false
    failed_when: false

  - name: Add custom function and alias to .bashrc for easy NVM project management
    blockinfile:
      path: "{{ ansible_env.HOME }}/.bashrc"
      block: "{{ lookup('file', 'cdnvm_function.sh') }}"
      marker: "# {mark} ANSIBLE MANAGED BLOCK - CDNVM FUNCTION"
      create: yes
    when:
      - add_cdnvm_to_bashrc == "true"
      - cdnvm_exists.rc != 0 or cdnvm_exists.stdout == "0"
